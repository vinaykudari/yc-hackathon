{
  "personas": [
    {
      "id": "modern-dark",
      "name": "Modern Dark",
      "description": "Dark theme, rounded corners, subtle shadows, accessible contrast, and gentle interactions.",
      "css": {
        "instruction": "I will apply a modern dark theme with accessible contrast and subtle rounded UI, without breaking layout.",
        "update": "// ... existing code ...\n:root { --morph-bg:#0f1115; --morph-surface:#161a22; --morph-text:#e6e9ef; --morph-muted:#9aa4b2; --morph-primary:#7aa2f7; --morph-accent:#9ece6a; --morph-border:rgba(255,255,255,0.08); --morph-radius:12px; --morph-shadow:0 10px 24px rgba(0,0,0,0.28); }\nhtml,body{ background:var(--morph-bg)!important; color:var(--morph-text)!important; }\nheader,nav,section,article,aside,footer,.card,.panel,.container,.content,.box{ background:var(--morph-surface)!important; color:var(--morph-text)!important; border-color:var(--morph-border)!important; border-radius:var(--morph-radius)!important; box-shadow:var(--morph-shadow)!important;}\na,a:visited{ color:var(--morph-primary)!important;} a:hover{ color:#a5b8ff!important;}\nbutton,.btn,input,select,textarea{ background:#1b2230!important; color:var(--morph-text)!important; border:1px solid var(--morph-border)!important; border-radius:var(--morph-radius)!important;}\npre,code{ background:#10141b!important; color:#e3e8f5!important; border:1px solid var(--morph-border)!important;}\n"
      },
      "js": {
        "instruction": "I will write an idempotent apply() that enhances checkout buttons and dismisses common newsletter modals.",
        "update": "// ... existing code ...\nexport function apply(){\n  document.querySelectorAll('.button--checkout,.btn--checkout,button[data-action=checkout],button[aria-label*=checkout i]').forEach(btn=>{ if(btn.dataset.morphCheckout)return; btn.classList.add('morph-checkout-sticky'); btn.style.position='sticky'; btn.style.bottom='16px'; btn.style.zIndex='9999'; btn.dataset.morphCheckout='1'; });\n  const modal=document.querySelector('#newsletter-modal,.newsletter-modal,[aria-modal=true][data-newsletter]'); if(modal && !modal.dataset.morphHidden){ modal.style.display='none'; modal.dataset.morphHidden='1'; }\n}\n"
      },
      "html": {
        "instruction": "I will inject a small, accessible CTA banner near the top of main content, updating it if it already exists.",
        "update": "// ... existing code ...\n<!-- morph-cta-begin --><div id='morph-cta' role='region' aria-label='Call to action' style='padding:12px;border:1px solid rgba(255,255,255,.12);border-radius:8px;margin:12px 0;background:#1b2230;color:#e6e9ef;'><div style='display:flex;justify-content:space-between;align-items:center;gap:12px;'><strong style='font-weight:600;'>Limited-time offer:</strong> Save 15% at checkout.<button id='morph-cta-close' aria-label='Close' style='border:1px solid rgba(255,255,255,.2);background:transparent;color:#e6e9ef;padding:6px 10px;border-radius:6px;cursor:pointer;'>Dismiss</button></div></div><!-- morph-cta-end -->\n"
      }
    },
    {
      "id": "high-contrast-a11y",
      "name": "High Contrast A11Y",
      "description": "Boost contrast, larger tap targets, visible focus rings; ensure accessible banners and resilient JS.",
      "css": {
        "instruction": "I will improve readability and accessibility: stronger contrast, clearer borders, larger tap targets, visible focus rings.",
        "update": "// ... existing code ...\n:root{ --hc-text:#111; --hc-bg:#fff; --hc-border:#111; --hc-focus:#0a84ff;} body{ color:var(--hc-text)!important; background:var(--hc-bg)!important;} a,a:visited{ color:#0a58ca!important; text-decoration-thickness:.12em!important;} button,.btn,input,select,textarea{ min-height:40px!important; border:2px solid var(--hc-border)!important;} *:focus{ outline:3px solid var(--hc-focus)!important; outline-offset:2px!important;} .text-muted,.muted{ color:#333!important;}\n"
      },
      "js": {
        "instruction": "I will add idempotent apply() that adds accessible labels and ensures focus management on dismissible UI.",
        "update": "// ... existing code ...\nexport function apply(){\n  const close=document.getElementById('morph-cta-close'); if(close && !close.dataset.morphA11y){ close.style.outline='2px solid #0a84ff'; close.style.outlineOffset='2px'; close.addEventListener('click',()=>{ (document.body||document.documentElement).focus(); },{once:true}); close.dataset.morphA11y='1'; }\n}\n"
      },
      "html": {
        "instruction": "I will inject an accessible info banner with ARIA roles and proper labeling.",
        "update": "// ... existing code ...\n<!-- morph-info-begin --><div id='morph-info' role='status' aria-live='polite' style='padding:12px;border:2px solid #111;border-radius:8px;margin:12px 0;background:#fff;color:#111;'>This page has been optimized for readability and keyboard navigation.</div><!-- morph-info-end -->\n"
      }
    },
    {
      "id": "rounded-modern-light",
      "name": "Rounded Modern Light",
      "description": "Soft, rounded, light theme with gentle shadows and smooth transitions; minimal behavior tweaks.",
      "css": {
        "instruction": "I will add rounded corners, soft shadows, and hover transitions in a light theme.",
        "update": "// ... existing code ...\n:root{ --morph-radius:12px; --morph-shadow:0 10px 24px rgba(0,0,0,.12);} button,.btn,input,select,textarea,.card,.panel,.box,.chip,.tag,.badge,.modal,.dropdown,.tooltip{ border-radius:var(--morph-radius)!important; transition:all 180ms ease!important;} .card,.panel,.box,.popover,.dropdown-menu{ box-shadow:var(--morph-shadow)!important; border:1px solid rgba(0,0,0,.06)!important;} button:hover,.btn:hover{ transform:translateY(-1px); box-shadow:0 12px 30px rgba(0,0,0,.14)!important;} input:focus,select:focus,textarea:focus,button:focus,.btn:focus{ outline:none!important; box-shadow:0 0 0 3px rgba(102,126,234,.18)!important;}\n"
      },
      "js": {
        "instruction": "I will write an idempotent apply() that adds a light hover affordance to primary CTAs.",
        "update": "// ... existing code ...\nexport function apply(){ document.querySelectorAll('a.button,button.btn,.btn-primary,button[role=button]').forEach(el=>{ if(el.dataset.morphLight)return; el.addEventListener('mouseenter',()=>{ el.style.filter='brightness(1.05)';}); el.addEventListener('mouseleave',()=>{ el.style.filter='';}); el.dataset.morphLight='1'; }); }\n"
      },
      "html": {
        "instruction": "I will inject a small helper tooltip container to host unobtrusive notices.",
        "update": "// ... existing code ...\n<!-- morph-tip-begin --><div id='morph-tip' role='note' style='position:fixed;right:12px;bottom:12px;background:#fff;color:#333;border:1px solid #e5e7eb;padding:10px 12px;border-radius:10px;box-shadow:0 6px 18px rgba(0,0,0,.12);z-index:999999;'>Tip: You can hover primary buttons to see subtle emphasis.</div><!-- morph-tip-end -->\n"
      }
    }
  ]
}

